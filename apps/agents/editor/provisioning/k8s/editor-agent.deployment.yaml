apiVersion: apps/v1
kind: Deployment
metadata:
  name: editor-agent
  namespace: editorial
spec:
  replicas: 1
  selector:
    matchLabels:
      app: editor-agent
  template:
    metadata:
      labels:
        app: editor-agent
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "editor-agent-role"
        vault.hashicorp.com/agent-inject-secret-openai: "secret/data/openai"
        vault.hashicorp.com/agent-inject-template-openai: |
          {{- with secret "secret/data/openai" -}}
          export OPENAI_API_KEY={{ .Data.data.token }}
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-editorial-service: "secret/data/editorial/service"
        vault.hashicorp.com/agent-inject-template-editorial-service: |
          {{- with secret "secret/data/editorial/service" -}}
          export EDITORIAL_SERVICE_API_TOKEN={{ .Data.data.token }}
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-queue: "secret/data/rabbitmq"
        vault.hashicorp.com/agent-inject-template-queue: |
          {{- with secret "secret/data/rabbitmq" -}}
          export QUEUE_USERNAME={{ .Data.data.username }}
          export QUEUE_PASSWORD={{ .Data.data.password }}
          {{- end }}
    spec:
      serviceAccountName: editor-agent
      containers:
        - name: editor-agent
          image: editor-agent:latest
          imagePullPolicy: Never
          command: ["sh", "-c"]
          args:
            - >
              echo "======= /vault/secrets/openai =======";
              nl -ba /vault/secrets/openai;
              echo "======= /vault/secrets/editorial-service =======";
              nl -ba /vault/secrets/editorial-service;
              echo "======= /vault/secrets/queue =======";
              nl -ba /vault/secrets/queue;
              set -a
              && . /vault/secrets/openai
              && . /vault/secrets/editorial-service
              && . /vault/secrets/queue
              && set +a
              && exec node src/index.js