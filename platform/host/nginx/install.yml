---
- name: Install nginx
  package:
    name: nginx
    state: present

- name: Create nginx configuration directory
  file:
    path: /etc/nginx/sites-available
    state: directory
    mode: '0755'

- name: Create nginx sites-enabled directory
  file:
    path: /etc/nginx/sites-enabled
    state: directory
    mode: '0755'

- name: Remove default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Create reverse proxy configuration
  template:
    src: nginx-site.conf.j2
    dest: /etc/nginx/sites-available/{{ target_env }}-wapps
    mode: '0644'

- name: Enable the site
  file:
    src: /etc/nginx/sites-available/{{ target_env }}-wapps
    dest: /etc/nginx/sites-enabled/{{ target_env }}-wapps
    state: link

- name: Generate self-signed SSL certificate
  shell: |
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
      -keyout /etc/ssl/private/nginx-selfsigned.key \
      -out /etc/ssl/certs/nginx-selfsigned.crt \
      -subj "/C=US/ST=State/L=City/O=Organization/CN={{ target_env }}.wapps.com"
  args:
    creates: /etc/ssl/certs/nginx-selfsigned.crt

- name: Test nginx configuration
  shell: nginx -t
  register: nginx_test
  changed_when: false
  failed_when: nginx_test.rc != 0

- name: Start and enable nginx
  systemd:
    name: nginx
    state: started
    enabled: yes
    daemon_reload: yes

- name: Wait for nginx to start
  wait_for:
    port: 80
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 10
  ignore_errors: yes

- name: Test reverse proxy
  shell: |
    curl -s -o /dev/null -w "%{http_code}" http://argocd.{{ target_env }}.wapps.com || echo "Failed"
  register: nginx_test_result
  changed_when: false
  failed_when: false

- name: Debug nginx test result
  debug:
    msg: |
      Nginx Test Result: {{ nginx_test_result.stdout | default('Test not run') }}

- name: Display nginx configuration status
  debug:
    msg: |
      ‚úÖ Nginx reverse proxy configured successfully!
      
      üåê Service URLs:
      - ArgoCD: https://argocd.{{ target_env }}.wapps.com
      - K3s API: https://k3s-api.{{ target_env }}.wapps.com  
      - Node Exporter: http://metrics.{{ target_env }}.wapps.com
      - Cluster Services: https://any-service.{{ target_env }}.wapps.com (via ingress)
      
      üîß Configuration:
      - Environment: {{ target_env }}
      - Nginx Config: /etc/nginx/sites-available/{{ target_env }}-wapps
      - Template: nginx/templates/nginx-site.conf.j2
      - SSL Certificate: Self-signed (browser warning expected)
      - Port: 80 (HTTP) and 443 (HTTPS)
      - Default routing: All unknown subdomains ‚Üí Kubernetes cluster
      
      üìã Notes:
      - All HTTP traffic redirects to HTTPS
      - Self-signed SSL certificates are used
      - Unknown subdomains are routed to the Kubernetes cluster
      - Cluster services are handled by the ingress controller