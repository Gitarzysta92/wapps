---
- name: Check if Tailscale domain is provided
  debug:
    msg: "Skipping DNS configuration - TAILSCALE_DOMAIN not provided"
  when: tailscale_domain is not defined or tailscale_domain == ""

- name: Extract tailnet name from domain
  set_fact:
    tailnet_name: "{{ tailscale_domain | regex_replace('\\.ts\\.net$', '') }}"
  when: tailscale_domain is defined and tailscale_domain != ""

- name: Get Tailscale IP using CLI
  shell: tailscale ip -4
  register: tailscale_ip_result
  changed_when: false
  failed_when: false
  when: tailscale_domain is defined and tailscale_domain != ""

- name: Debug Tailscale IP
  debug:
    msg: |
      Tailscale IP: {{ tailscale_ip_result.stdout | default('not found') }}
      Tailscale domain: {{ tailscale_domain | default('undefined') }}
      Tailnet name: {{ tailnet_name | default('undefined') }}
      Device name: {{ tailscale_device_name | default('undefined') }}

- name: Install dnsmasq
  package:
    name: dnsmasq
    state: present

- name: Create dnsmasq configuration directory
  file:
    path: /etc/dnsmasq.d
    state: directory
    mode: '0755'


- name: Create main dnsmasq configuration
  copy:
    content: |
      # Main dnsmasq configuration
      # Generated by Ansible - do not edit manually
      
      # Include environment-specific configs
      conf-dir=/etc/dnsmasq.d
      
      # Log to syslog
      log-facility=/var/log/dnsmasq.log
    dest: /etc/dnsmasq.conf
    mode: '0644'

- name: Start and enable dnsmasq
  systemd:
    name: dnsmasq
    state: started
    enabled: yes
    daemon_reload: yes

- name: Wait for dnsmasq to start
  wait_for:
    port: 5353
    host: "{{ ansible_default_ipv4.address }}"
    timeout: 10
  ignore_errors: yes

- name: Test DNS resolution
  shell: |
    nslookup -port=5353 argocd.{{ target_env }}.wapps.com {{ ansible_default_ipv4.address }}
  register: dns_test_result
  changed_when: false
  failed_when: false
  when: 
    - tailscale_domain is defined and tailscale_domain != ""
    - tailscale_ip_result.stdout is defined and tailscale_ip_result.stdout != ""

- name: Debug DNS test result
  debug:
    msg: |
      DNS Test Result:
      {{ dns_test_result.stdout | default('DNS test not run') }}
  when: dns_test_result is defined

- name: Configure dnsmasq to only handle development domain
  copy:
    content: |
      # Tailscale DNS configuration for {{ target_env }} environment
      # Generated by Ansible - do not edit manually
      
      # Use port 5353 to avoid conflict with systemd-resolved
      port=5353
      
      # Listen on all interfaces including Tailscale
      listen-address=127.0.0.1
      listen-address={{ ansible_default_ipv4.address }}
      listen-address={{ tailscale_ip_result.stdout }}
      
      # Enable logging
      log-queries
      log-dhcp
      
      # Only handle {{ target_env }}.wapps.com domain and subdomains
      # This will resolve ANY subdomain to the Tailscale IP
      address=/{{ target_env }}.wapps.com/{{ tailscale_ip_result.stdout }}
      
      # Forward other queries to system DNS (don't interfere with normal DNS)
      server=8.8.8.8
      server=1.1.1.1
      
      # Cache settings
      cache-size=1000
      neg-ttl=3600
      
      # Don't read /etc/hosts
      no-hosts
      
      # Don't read /etc/resolv.conf
      no-resolv
    dest: /etc/dnsmasq.d/tailscale-{{ target_env }}.conf
    mode: '0644'
  when: 
    - tailscale_domain is defined and tailscale_domain != ""
    - tailscale_ip_result.stdout is defined and tailscale_ip_result.stdout != ""

- name: Configure systemd-resolved to use dnsmasq for development domain only
  copy:
    content: |
      [Resolve]
      DNS=127.0.0.1:5353 8.8.8.8 1.1.1.1
      Domains={{ target_env }}.wapps.com
      FallbackDNS=8.8.8.8 1.1.1.1
    dest: /etc/systemd/resolved.conf.d/99-dnsmasq.conf
    mode: '0644'
  when: 
    - tailscale_domain is defined and tailscale_domain != ""
    - tailscale_ip_result.stdout is defined and tailscale_ip_result.stdout != ""

- name: Restart systemd-resolved
  systemd:
    name: systemd-resolved
    state: restarted
    daemon_reload: yes
  when: 
    - tailscale_domain is defined and tailscale_domain != ""
    - tailscale_ip_result.stdout is defined and tailscale_ip_result.stdout != ""

- name: Test DNS resolution for development domain
  shell: |
    nslookup -port=5353 argocd.{{ target_env }}.wapps.com {{ ansible_default_ipv4.address }}
  register: dns_test_result
  changed_when: false
  failed_when: false
  when: 
    - tailscale_domain is defined and tailscale_domain != ""
    - tailscale_ip_result.stdout is defined and tailscale_ip_result.stdout != ""

- name: Debug DNS test result
  debug:
    msg: |
      DNS Test Result for {{ target_env }}.wapps.com:
      {{ dns_test_result.stdout | default('DNS test not run') }}
  when: dns_test_result is defined

- name: Display DNS configuration status
  debug:
    msg: |
      {% if tailscale_domain is defined and tailscale_domain != "" and tailscale_ip_result.stdout is defined and tailscale_ip_result.stdout != "" %}
      ‚úÖ dnsmasq DNS configuration completed successfully!
      
      üåê Wildcard DNS: *.{{ target_env }}.wapps.com ‚Üí {{ tailscale_ip_result.stdout }}
      
      üìç Service URLs (all resolve to the same IP):
      - ArgoCD: https://argocd.{{ target_env }}.wapps.com
      - K3s API: https://k3s-api.{{ target_env }}.wapps.com
      - Node Exporter: http://metrics.{{ target_env }}.wapps.com
      - Grafana: https://grafana.{{ target_env }}.wapps.com
      - Prometheus: https://prometheus.{{ target_env }}.wapps.com
      - ANY service: https://anything.{{ target_env }}.wapps.com
      
      üîß Device info:
      - Device hostname: {{ tailscale_device_name }}
      - Tailscale IP: {{ tailscale_ip_result.stdout }}
      - Environment: {{ target_env }}
      - DNS Server: {{ ansible_default_ipv4.address }}:5353
      
      ‚úÖ Domain-specific DNS configured successfully!
      - Only {{ target_env }}.wapps.com domain uses dnsmasq
      - All other domains use normal system DNS (8.8.8.8, 1.1.1.1)
      - Wildcard DNS: *.{{ target_env }}.wapps.com ‚Üí {{ tailscale_ip_result.stdout }}
      - DNS Server: {{ ansible_default_ipv4.address }}:5353 (port 5353 to avoid conflicts)
      - systemd-resolved configured to route {{ target_env }}.wapps.com to dnsmasq
      {% else %}
      ‚ùå DNS configuration failed - missing required variables
      {% endif %}