---
- name: Install dnsmasq
  package:
    name: dnsmasq
    state: present

- name: Create dnsmasq configuration directory
  file:
    path: /etc/dnsmasq.d
    state: directory
    mode: '0755'

- name: Create dnsmasq loopback configuration
  copy:
    content: |
      # dnsmasq loopback configuration for {{ target_env }} environment
      # Generated by Ansible - do not edit manually
      
      # Bind to loopback interface only
      interface=lo
      bind-dynamic
      
      # Use port 5353 to avoid conflict with systemd-resolved
      port=5353
      
      # Enable logging
      log-queries
      log-dhcp
      
      # Only handle {{ target_env }}.wapps.com domain and subdomains
      # This will resolve ANY subdomain to the specified IP
      address=/{{ target_env }}.wapps.com/{{ target_ip }}
      address=/*.{{ target_env }}.wapps.com/{{ target_ip }}
      
      # Forward other queries to upstream DNS
      no-resolv
      server=1.1.1.1
      server=9.9.9.9
      
      # Cache settings
      cache-size=1000
      neg-ttl=3600
      
      # Don't read /etc/hosts
      no-hosts
    dest: /etc/dnsmasq.d/loopback-5353.conf
    mode: '0644'
  when: target_ip is defined and target_ip != ""

- name: Create main dnsmasq configuration
  copy:
    content: |
      # Main dnsmasq configuration
      # Generated by Ansible - do not edit manually
      
      # Include environment-specific configs
      conf-dir=/etc/dnsmasq.d
      
      # Log to syslog
      log-facility=/var/log/dnsmasq.log
    dest: /etc/dnsmasq.conf
    mode: '0644'

- name: Create systemd-resolved configuration directory
  file:
    path: /etc/systemd/resolved.conf.d
    state: directory
    mode: '0755'

- name: Configure systemd-resolved to use dnsmasq
  copy:
    content: |
      # systemd-resolved configuration for dnsmasq integration
      # Generated by Ansible - do not edit manually
      
      [Resolve]
      DNS=127.0.0.1:5353
      # Keep the stub listener on 127.0.0.53:53 (default)
      DNSStubListener=yes
    dest: /etc/systemd/resolved.conf.d/dnsmasq.conf
    mode: '0644'
  when: target_ip is defined and target_ip != ""

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes

- name: Start and enable dnsmasq
  systemd:
    name: dnsmasq
    state: started
    enabled: yes
    daemon_reload: yes

- name: Restart systemd-resolved
  systemd:
    name: systemd-resolved
    state: restarted
    daemon_reload: yes

- name: Wait for dnsmasq to start
  wait_for:
    port: 5353
    host: "127.0.0.1"
    timeout: 10
  ignore_errors: yes

- name: Test DNS resolution through systemd-resolved
  shell: |
    nslookup argocd.{{ target_env }}.wapps.com 127.0.0.53
  register: dns_test_result
  changed_when: false
  failed_when: false
  when: target_ip is defined and target_ip != ""

- name: Debug DNS test result
  debug:
    msg: |
      DNS Test Result for {{ target_env }}.wapps.com:
      {{ dns_test_result.stdout | default('DNS test not run') }}
  when: dns_test_result is defined

- name: Display DNS configuration status
  debug:
    msg: |
      {% if target_ip is defined and target_ip != "" %}
      ‚úÖ DNS configuration completed successfully!
      
      üåê Wildcard DNS: *.{{ target_env }}.wapps.com ‚Üí {{ target_ip }}
      
      üìç Service URLs (all resolve to the same IP):
      - ArgoCD: https://argocd.{{ target_env }}.wapps.com
      - K3s API: https://k3s-api.{{ target_env }}.wapps.com
      - Node Exporter: http://metrics.{{ target_env }}.wapps.com
      - Grafana: https://grafana.{{ target_env }}.wapps.com
      - Prometheus: https://prometheus.{{ target_env }}.wapps.com
      - ANY service: https://anything.{{ target_env }}.wapps.com
      
      üîß DNS Server info:
      - systemd-resolved: 127.0.0.53:53 (stub listener)
      - dnsmasq: 127.0.0.1:5353 (upstream)
      - Environment: {{ target_env }}
      - Target IP: {{ target_ip }}
      
      üìã How it works:
      1. Apps query 127.0.0.53:53 (systemd-resolved)
      2. systemd-resolved forwards to 127.0.0.1:5353 (dnsmasq)
      3. dnsmasq resolves {{ target_env }}.wapps.com domains to {{ target_ip }}
      4. Other domains are forwarded to 1.1.1.1 and 9.9.9.9
      {% else %}
      ‚ùå DNS configuration failed - missing target_ip variable
      {% endif %}
