---
- name: Configure System Optimization
  hosts: web
  become: yes
  vars:
    target_env: "{{ target_env | default('staging') }}"
    apps_dir: "/opt/wapps"

  tasks:
    - name: Update system packages
      package:
        name: "*"
        state: latest
      when: target_env == "production"

    - name: Install essential packages
      package:
        name:
          - curl
          - wget
          - git
          - unzip
          - htop
          - vim
          - jq
        state: present

    - name: Configure kernel parameters for K3s
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: 'vm.max_map_count', value: '262144' }
        - { name: 'fs.file-max', value: '65536' }
        - { name: 'net.core.somaxconn', value: '65535' }
        - { name: 'net.ipv4.tcp_max_syn_backlog', value: '65535' }

    - name: Configure system limits
      pam_limits:
        domain: '*'
        limit_type: '{{ item.type }}'
        limit_item: '{{ item.item }}'
        value: '{{ item.value }}'
      loop:
        - { type: 'soft', item: 'nofile', value: '65536' }
        - { type: 'hard', item: 'nofile', value: '65536' }
        - { type: 'soft', item: 'nproc', value: '32768' }
        - { type: 'hard', item: 'nproc', value: '32768' }

    - name: Disable swap for Kubernetes
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      args:
        creates: /tmp/swap-disabled

    - name: Configure timezone
      timezone:
        name: UTC

    - name: Configure NTP
      package:
        name: ntp
        state: present

    - name: Start and enable NTP
      systemd:
        name: ntp
        state: started
        enabled: yes

    - name: Create applications directory
      file:
        path: "{{ apps_dir }}"
        state: directory
        mode: '0755'

    - name: Clone or update repository
      git:
        repo: "https://github.com/Gitarzysta92/wapps.git"
        dest: "{{ apps_dir }}"
        version: "{{ git_sha }}"
        force: yes
      register: git_result

    - name: Configure system monitoring
      block:
        - name: Create monitoring directory
          file:
            path: /etc/monitoring
            state: directory
            mode: '0755'

        - name: Configure logrotate for application logs
          copy:
            content: |
              {{ apps_dir }}/logs/*.log {
                  daily
                  missingok
                  rotate 7
                  compress
                  delaycompress
                  notifempty
                  create 644 root root
              }
            dest: /etc/logrotate.d/wapps
            mode: '0644'

        - name: Configure system log rotation
          copy:
            content: |
              /var/log/syslog {
                  daily
                  missingok
                  rotate 7
                  compress
                  delaycompress
                  notifempty
                  create 640 syslog adm
              }
              
              /var/log/kern.log {
                  daily
                  missingok
                  rotate 7
                  compress
                  delaycompress
                  notifempty
                  create 640 syslog adm
              }
            dest: /etc/logrotate.d/system-logs
            mode: '0644'

    - name: Setup system services
      block:
        - name: Create systemd service for host applications
          copy:
            content: |
              [Unit]
              Description=WApps Host Services
              After=network.target

              [Service]
              Type=oneshot
              RemainAfterExit=yes
              WorkingDirectory={{ apps_dir }}
              ExecStart=/bin/true
              User={{ ansible_user }}
              Group={{ ansible_user }}

              [Install]
              WantedBy=multi-user.target
            dest: /etc/systemd/system/wapps-host.service
            mode: '0644'

        - name: Reload systemd daemon
          systemd:
            daemon_reload: yes

        - name: Enable wapps-host service
          systemd:
            name: wapps-host
            enabled: yes
            state: started

    - name: Configure firewall rules
      block:
        - name: Install ufw
          package:
            name: ufw
            state: present

        - name: Allow SSH
          ufw:
            rule: allow
            port: "22"
            proto: tcp

        - name: Allow HTTP
          ufw:
            rule: allow
            port: "80"
            proto: tcp

        - name: Allow HTTPS
          ufw:
            rule: allow
            port: "443"
            proto: tcp

        - name: Allow K3s API server
          ufw:
            rule: allow
            port: "6443"
            proto: tcp

        - name: Allow ArgoCD server
          ufw:
            rule: allow
            port: "30080"
            proto: tcp

        - name: Allow Node Exporter
          ufw:
            rule: allow
            port: "9100"
            proto: tcp

        - name: Enable UFW
          ufw:
            state: enabled

    - name: Create application logs directory
      file:
        path: "{{ apps_dir }}/logs"
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
