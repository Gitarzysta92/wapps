name: Host Environment Provisioning (Ansible)

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Target environment"
        type: choice
        required: true
        options: [development, staging, production]

jobs:
  provision:
    runs-on: [self-hosted, development]
    environment: ${{ github.event.inputs.env }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python & Ansible
        run: |
          echo "$SUDO_PASS" | sudo -S apt-get update --yes
          echo "$SUDO_PASS" | sudo -S apt-get install --yes python3-pip python3-venv
          python3 -m venv ~/ansible-env
          ~/ansible-env/bin/pip install --upgrade pip
          ~/ansible-env/bin/pip install "ansible>=9,<10"
          echo "$HOME/ansible-env/bin" >> $GITHUB_PATH
        env:
          SUDO_PASS: ${{ secrets.SUDO_PASS }}

      - name: Provision local host with Ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          SUDO_PASS: ${{ secrets.SUDO_PASS }}
          ARGOCD_ADMIN_PASSWORD: ${{ secrets.ARGOCD_ADMIN_PASSWORD }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
          TAILSCALE_API_TOKEN: ${{ secrets.TAILSCALE_API_TOKEN }}
          TAILSCALE_DOMAIN: ${{ secrets.TAILSCALE_DOMAIN }}
        run: |
          echo "Debug: job.environment = ${{ job.environment }}"
          echo "Debug: github.event.inputs.env = ${{ github.event.inputs.env }}"
          EXTRA_VARS="target_env=${{ github.event.inputs.env }} git_sha=${{ github.sha }} argocd_admin_password=$ARGOCD_ADMIN_PASSWORD git_token=$GIT_TOKEN tailscale_auth_key=$TAILSCALE_AUTH_KEY tailscale_api_token=$TAILSCALE_API_TOKEN tailscale_domain=$TAILSCALE_DOMAIN"
          echo "Debug: EXTRA_VARS = $EXTRA_VARS"

          echo "$SUDO_PASS" | ansible-playbook -i platform/host/inventory.ini platform/host/main.yml \
            --extra-vars "$EXTRA_VARS" \
            --ask-become-pass

